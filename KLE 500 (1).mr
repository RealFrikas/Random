import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

private node wires{
    output wire1: ignition_wire();
}

public node er5_ignition {
    input wires;
    input timing_curve;
    input rev_limit: 10000*units.rpm;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit)
            .connect_wire(wires.wire1, 180 * units.deg)
            .connect_wire(wires.wire1, 360 * units.deg);
}

public node i2_camsjaft_builder {
    input lobe_profile;
    input intake_lobe_profile: lobe_profile;
    input exhaust_lobe_profile: lobe_profile;
    input lobe_separation: 110.0 * units.deg;
    input intake_lobe_center: (360 * units.deg - (lobe_separation / 2));
    input exhaust_lobe_center: (360 * units.deg + (lobe_separation / 2));
    input advance: 0.0 * units.deg;
    input base_radius: 0.75 * units.inch;

    output intake_cam: _intake_cam;
    output exhaust_cam: _exhaust_cam;

    camshaft_parameters params(
        advance: advance,
        base_radius: base_radius
    )

    camshaft _intake_cam(params, lobe_profile: intake_lobe_profile)
    camshaft _exhaust_cam(params, lobe_profile: exhaust_lobe_profile)

    label rot(2 * (360/2) * units.deg)
    label rot360(360 * units.deg)

    _exhaust_cam
        .add_lobe(rot360 - exhaust_lobe_center)
        .add_lobe((rot360 - exhaust_lobe_center) + 2 * rot)

    _intake_cam
        .add_lobe(rot360 - intake_lobe_center)
        .add_lobe((rot360 - intake_lobe_center) + 2 * rot)
}

public node kawasaki_er_5 {
    alias output __out: engine;

    wires wires()

    engine engine(
        name: "Kawasaki er 5",
        starter_torque: 60 * units.lb_ft,
        starter_speed: 600 * units.rpm,
        redline: 11000*units.rpm,
        hf_gain: 0.01,
        noise: 0.115,
        jitter: 0.136,
        simulation_frequency: 10000
    )

    crankshaft c0(
        throw: 0.5 * 58 * units.mm,
        flywheel_mass: 7.7 * units.lb,
        mass: 13.2 * units.lb,
        friction_torque: 5.0 * units.lb_ft,
        moment_of_inertia: 0.22986844776863666 * 0.9,
        position_x: 0.0,
        position_y: 0.0,
        tdc: 90 * units.deg
    )

    rod_journal rj0(angle: (0.0/2.0) * 360 * units.deg)
    rod_journal rj1(angle: (2.0/2.0) * 360 * units.deg)

    c0
        .add_rod_journal(rj0)
        .add_rod_journal(rj1)

    engine.add_crankshaft(c0)

    cylinder_bank_parameters bank_params(
        bore: 74 * units.mm,
        deck_height: 168.5 * units.mm
    )

    piston_parameters piston_params(
    mass: 260.0 * units.g,
    compression_height: 29.5 * units.mm,
    wrist_pin_position: 0 * units.mm,
    displacement: 0.0
)

    connecting_rod_parameters cr_params(
            mass: 420.0 * units.g,
            moment_of_inertia: 0.0016,  
            center_of_mass: 0.0,
            length: 140.0 * units.mm    
    )

    intake intake(
        plenum_volume: 1.8 * units.L,
        plenum_cross_section_area: 8.0 * units.cm2,
        intake_flow_rate: k_carb(180.0),
        idle_flow_rate: k_carb(2.0),
        idle_throttle_plate_position: 0.98
    )

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(450.0),
        primary_tube_length: 18.0 * units.inch,
        primary_flow_rate: k_carb(180.0),
        velocity_decay: 0.6,
        volume: 4.5 * units.L
    )

    exhaust_system exhaust0(es_params, audio_volume: 1.0, impulse_response: ir_lib.mild_exhaust_0_reverb)

    cylinder_bank b0(bank_params, angle: 0)
    b0
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.2)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj0,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire1
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.2)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire1
        )

    engine  
        .add_cylinder_bank(b0)

    //chat
    i2_camsjaft_builder camshaft(
        intake_lobe,
        exhaust_lobe
        //lobe_separation: 110 * units.deg,
        //base_radius: 18.0 * units.mm
    )

    harmonic_cam_lobe intake_lobe(
        duration_at_50_thou: 224 * units.deg,
        gamma: 2.0,
        lift: 7.95 * units.mm,
        steps: 100
    )

    harmonic_cam_lobe exhaust_lobe(
        duration_at_50_thou: 224 * units.deg,
        gamma: 2.0,
        lift: 7.95 * units.mm,
        steps: 100
    )

    b0.set_cylinder_head (
        generic_small_engine_head(
            chamber_volume: 250 * units.cc,
            intake_camshaft: camshaft.intake_cam,
            exhaust_camshaft: camshaft.exhaust_cam
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 10 * units.deg)
        .add_sample(1500 * units.rpm, 12 * units.deg)
        .add_sample(3000 * units.rpm, 24 * units.deg)
        .add_sample(5000 * units.rpm, 32 * units.deg)
        .add_sample(8500 * units.rpm, 38 * units.deg)


    engine.add_ignition_module(
        er5_ignition(
            wires: wires,
            timing_curve: timing_curve,
            rev_limit: 10000*units.rpm
        )
    )
}

private node kle500_vehicle {
    alias output __out:
        vehicle(
            mass: 430 * units.lb,  // ~195 kg wet
            drag_coefficient: 0.1,  // adventure fairing
            cross_sectional_area: (19 * units.inch) * (47 * units.inch),
            diff_ratio: 3.43,  // chain final drive: 15/52
            tire_radius: 12.0 * units.inch,
            rolling_resistance: 180 * units.N
        );
}


private node kle500_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 90 * units.lb_ft  // generous estimate for clutch hold
        )
        .add_gear(2.86)  // 1st
        .add_gear(1.95)  // 2nd
        .add_gear(1.55)  // 3rd
        .add_gear(1.33)  // 4th
        .add_gear(1.19)  // 5th
        .add_gear(1.04); // 6th
}


public node main{
    //set_engine(kawasaki_er_5())
    run(
        engine: kawasaki_er_5(),
        transmission: kle500_transmission(),
        vehicle: kle500_vehicle()
    )
}

main()